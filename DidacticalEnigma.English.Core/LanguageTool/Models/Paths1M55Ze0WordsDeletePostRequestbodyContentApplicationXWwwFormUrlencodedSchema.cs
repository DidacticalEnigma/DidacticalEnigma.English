// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    /// <summary> The Paths1M55Ze0WordsDeletePostRequestbodyContentApplicationXWwwFormUrlencodedSchema. </summary>
    internal partial class Paths1M55Ze0WordsDeletePostRequestbodyContentApplicationXWwwFormUrlencodedSchema
    {
        /// <summary> Initializes a new instance of Paths1M55Ze0WordsDeletePostRequestbodyContentApplicationXWwwFormUrlencodedSchema. </summary>
        /// <param name="word"> The word to be removed. </param>
        /// <param name="username"> Your username as used to log in at languagetool.org. </param>
        /// <param name="apiKey"> &lt;a target=&apos;_blank&apos; href=&apos;https://languagetool.org/editor/settings/api&apos;&gt;Your API key&lt;/a&gt;. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="word"/>, <paramref name="username"/> or <paramref name="apiKey"/> is null. </exception>
        internal Paths1M55Ze0WordsDeletePostRequestbodyContentApplicationXWwwFormUrlencodedSchema(string word, string username, string apiKey)
        {
            if (word == null)
            {
                throw new ArgumentNullException(nameof(word));
            }
            if (username == null)
            {
                throw new ArgumentNullException(nameof(username));
            }
            if (apiKey == null)
            {
                throw new ArgumentNullException(nameof(apiKey));
            }

            Word = word;
            Username = username;
            ApiKey = apiKey;
        }

        /// <summary> The word to be removed. </summary>
        public string Word { get; }
        /// <summary> Your username as used to log in at languagetool.org. </summary>
        public string Username { get; }
        /// <summary> &lt;a target=&apos;_blank&apos; href=&apos;https://languagetool.org/editor/settings/api&apos;&gt;Your API key&lt;/a&gt;. </summary>
        public string ApiKey { get; }
        /// <summary> Name of the dictionary to remove the word from; if the dictionary is empty upon calling this, it is deleted; if unset, removes from special default dictionary. </summary>
        public string Dict { get; }
    }
}
