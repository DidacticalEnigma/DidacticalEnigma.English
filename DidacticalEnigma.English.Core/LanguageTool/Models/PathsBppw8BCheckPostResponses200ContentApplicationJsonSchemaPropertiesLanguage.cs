// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    /// <summary> The language used for checking the text. </summary>
    public partial class PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage
    {
        /// <summary> Initializes a new instance of PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage. </summary>
        /// <param name="name"> Language name like &apos;French&apos; or &apos;English (US)&apos;. </param>
        /// <param name="code"> ISO 639-1 code like &apos;en&apos;, &apos;en-US&apos;, or &apos;ca-ES-valencia&apos;. </param>
        /// <param name="detectedLanguage"> The automatically detected text language (might be different from the language actually used for checking). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="code"/> or <paramref name="detectedLanguage"/> is null. </exception>
        internal PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage(string name, string code, Paths9LjlvoCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguagePropertiesDetectedlanguage detectedLanguage)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (code == null)
            {
                throw new ArgumentNullException(nameof(code));
            }
            if (detectedLanguage == null)
            {
                throw new ArgumentNullException(nameof(detectedLanguage));
            }

            Name = name;
            Code = code;
            DetectedLanguage = detectedLanguage;
        }

        /// <summary> Language name like &apos;French&apos; or &apos;English (US)&apos;. </summary>
        public string Name { get; }
        /// <summary> ISO 639-1 code like &apos;en&apos;, &apos;en-US&apos;, or &apos;ca-ES-valencia&apos;. </summary>
        public string Code { get; }
        /// <summary> The automatically detected text language (might be different from the language actually used for checking). </summary>
        public Paths9LjlvoCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguagePropertiesDetectedlanguage DetectedLanguage { get; }
    }
}
