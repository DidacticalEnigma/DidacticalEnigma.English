// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    public partial class PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema
    {
        internal static PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema DeserializePathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema(JsonElement element)
        {
            Optional<Post200ApplicationJsonProperties> software = default;
            Optional<PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage> language = default;
            Optional<IReadOnlyList<Post200ApplicationJsonPropertiesItemsItem>> matches = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("software"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    software = Post200ApplicationJsonProperties.DeserializePost200ApplicationJsonProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("language"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    language = PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage.DeserializePathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage(property.Value);
                    continue;
                }
                if (property.NameEquals("matches"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Post200ApplicationJsonPropertiesItemsItem> array = new List<Post200ApplicationJsonPropertiesItemsItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Post200ApplicationJsonPropertiesItemsItem.DeserializePost200ApplicationJsonPropertiesItemsItem(item));
                    }
                    matches = array;
                    continue;
                }
            }
            return new PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema(software.Value, language.Value, Optional.ToList(matches));
        }
    }
}
