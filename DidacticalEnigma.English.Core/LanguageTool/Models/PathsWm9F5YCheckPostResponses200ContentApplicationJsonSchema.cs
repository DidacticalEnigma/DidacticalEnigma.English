// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    /// <summary> The PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema. </summary>
    public partial class PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema
    {
        /// <summary> Initializes a new instance of PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema. </summary>
        internal PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema()
        {
            Matches = new ChangeTrackingList<Post200ApplicationJsonPropertiesItemsItem>();
        }

        /// <summary> Initializes a new instance of PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema. </summary>
        /// <param name="software"></param>
        /// <param name="language"> The language used for checking the text. </param>
        /// <param name="matches"></param>
        internal PathsWm9F5YCheckPostResponses200ContentApplicationJsonSchema(Post200ApplicationJsonProperties software, PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage language, IReadOnlyList<Post200ApplicationJsonPropertiesItemsItem> matches)
        {
            Software = software;
            Language = language;
            Matches = matches;
        }

        /// <summary> Gets the software. </summary>
        public Post200ApplicationJsonProperties Software { get; }
        /// <summary> The language used for checking the text. </summary>
        public PathsBppw8BCheckPostResponses200ContentApplicationJsonSchemaPropertiesLanguage Language { get; }
        /// <summary> Gets the matches. </summary>
        public IReadOnlyList<Post200ApplicationJsonPropertiesItemsItem> Matches { get; }
    }
}
