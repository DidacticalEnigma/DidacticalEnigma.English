// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    /// <summary> The Post200ApplicationJsonProperties. </summary>
    public partial class Post200ApplicationJsonProperties
    {
        /// <summary> Initializes a new instance of Post200ApplicationJsonProperties. </summary>
        /// <param name="name"> Usually &apos;LanguageTool&apos;. </param>
        /// <param name="version"> A version string like &apos;3.3&apos; or &apos;3.4-SNAPSHOT&apos;. </param>
        /// <param name="buildDate"> Date when the software was built, e.g. &apos;2016-05-25&apos;. </param>
        /// <param name="apiVersion"> Version of this API response. We don&apos;t expect to make incompatible changes, so this can also be increased for newly added fields. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="version"/> or <paramref name="buildDate"/> is null. </exception>
        internal Post200ApplicationJsonProperties(string name, string version, string buildDate, int apiVersion)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (version == null)
            {
                throw new ArgumentNullException(nameof(version));
            }
            if (buildDate == null)
            {
                throw new ArgumentNullException(nameof(buildDate));
            }

            Name = name;
            Version = version;
            BuildDate = buildDate;
            ApiVersion = apiVersion;
        }

        /// <summary> Initializes a new instance of Post200ApplicationJsonProperties. </summary>
        /// <param name="name"> Usually &apos;LanguageTool&apos;. </param>
        /// <param name="version"> A version string like &apos;3.3&apos; or &apos;3.4-SNAPSHOT&apos;. </param>
        /// <param name="buildDate"> Date when the software was built, e.g. &apos;2016-05-25&apos;. </param>
        /// <param name="apiVersion"> Version of this API response. We don&apos;t expect to make incompatible changes, so this can also be increased for newly added fields. </param>
        /// <param name="status"> An optional warning, e.g. when the API format is not stable. </param>
        /// <param name="premium"> true if you&apos;re using a Premium account with all the premium text checks (since LanguageTool 4.2). </param>
        internal Post200ApplicationJsonProperties(string name, string version, string buildDate, int apiVersion, string status, bool? premium)
        {
            Name = name;
            Version = version;
            BuildDate = buildDate;
            ApiVersion = apiVersion;
            Status = status;
            Premium = premium;
        }

        /// <summary> Usually &apos;LanguageTool&apos;. </summary>
        public string Name { get; }
        /// <summary> A version string like &apos;3.3&apos; or &apos;3.4-SNAPSHOT&apos;. </summary>
        public string Version { get; }
        /// <summary> Date when the software was built, e.g. &apos;2016-05-25&apos;. </summary>
        public string BuildDate { get; }
        /// <summary> Version of this API response. We don&apos;t expect to make incompatible changes, so this can also be increased for newly added fields. </summary>
        public int ApiVersion { get; }
        /// <summary> An optional warning, e.g. when the API format is not stable. </summary>
        public string Status { get; }
        /// <summary> true if you&apos;re using a Premium account with all the premium text checks (since LanguageTool 4.2). </summary>
        public bool? Premium { get; }
    }
}
