// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace DidacticalEnigma.English.LanguageTool.Models
{
    public partial class PostResponses200ContentApplicationJsonSchemaMatchesItemRule
    {
        internal static PostResponses200ContentApplicationJsonSchemaMatchesItemRule DeserializePostResponses200ContentApplicationJsonSchemaMatchesItemRule(JsonElement element)
        {
            string id = default;
            Optional<string> subId = default;
            string description = default;
            Optional<IReadOnlyList<Post200ApplicationJsonPropertiesItemsRuleUrlsItem>> urls = default;
            Optional<string> issueType = default;
            Post200ApplicationJsonPropertiesItemsRuleCategory category = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subId"))
                {
                    subId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("urls"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Post200ApplicationJsonPropertiesItemsRuleUrlsItem> array = new List<Post200ApplicationJsonPropertiesItemsRuleUrlsItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Post200ApplicationJsonPropertiesItemsRuleUrlsItem.DeserializePost200ApplicationJsonPropertiesItemsRuleUrlsItem(item));
                    }
                    urls = array;
                    continue;
                }
                if (property.NameEquals("issueType"))
                {
                    issueType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("category"))
                {
                    category = Post200ApplicationJsonPropertiesItemsRuleCategory.DeserializePost200ApplicationJsonPropertiesItemsRuleCategory(property.Value);
                    continue;
                }
            }
            return new PostResponses200ContentApplicationJsonSchemaMatchesItemRule(id, subId.Value, description, Optional.ToList(urls), issueType.Value, category);
        }
    }
}
